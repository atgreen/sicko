apiVersion: v1
kind: Template
message: |-
  The following service has been created in your project: ${NAME}.

  For more information about using this template, including OpenShift considerations, see https://github.com/atgreen/tiysoo/README.md.
metadata:
  name: satellite-template
  annotations:
    description: |-
      Red Hat Satellite Server, all in one container. For more information about using this template, including OpenShift considerations, see https://github.com/atgreen/tiysoo/README.md.

      WARNING: This container takes a very long time to initialize and start-up the first time.  Please be patient.
    openshift.io/display-name: Red Hat Satellite
    description: "Red Hat Satellite Server"
    tags: "satellite"
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: satellite
    name: ${NAME}
  spec:
    lookupPolicy:
      local: true
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
    labels:
      app: "satellite"
    name: ${NAME}
  spec:
    output:
      to:
        kind: "ImageStreamTag"
        name: "${NAME}:latest"
    resources: {}
    source:
      git:
        ref: master
        uri: ${SOURCE_REPOSITORY_URL}
      contextDir:
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: Dockerfile
        env:
          - name: RHSM_USERNAME
            value: ${RHSM_USERNAME}
          - name: RHSM_PASSWORD
            value: ${RHSM_PASSWORD}
          - name: RHSM_POOL
            value: ${RHSM_POOL}
          - name: FOREMAN_ADMIN_PASSWORD
            value: ${FOREMAN_ADMIN_PASSWORD}
        from:
          kind: DockerImage
          name: rhel7
        forcePull: true
      type: Docker
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: satellite
    name: ${NAME}
  spec:
    clusterIP: None
    ports:
    - name: satellite
      port: 443
      protocol: TCP
      targetPort: 443
    selector:
      app: satellite
    sessionAffinity: None
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: satellite
    name: ${NAME}
  spec:
    host: ${APPLICATION_DOMAIN}
    port:
      targetPort: satellite
    tls:
      termination: passthrough
    to:
      kind: Service
      name: ${NAME}
      weight: 100
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    name: satellite
  spec:
    selector:
      matchLabels:
        app: satellite
    lookupPolicy:
      local: true
    serviceName: ${NAME}
    replicas: 1
    template:
      metadata:
        labels:
          app: satellite
      spec:
        terminationGracePeriodSeconds: 10
        initContainers:
        - name: init-satellite
          image: ${NAME}
          command: ["/bin/bash", "-c", "if ! test -f /satellite-var/.tiysoo-installed; then
                                          rm -rf /satellite-etc/* /satellite-var/* /satellite-etc/.* /satellite-var/.*; \
                                          find /etc > /satellite-var/.p0 2>&1; \
                                          find /etc/foreman-installer | xargs ls -l > /satellite-var/.p1   2>&1; \
                                          (cd /etc; tar --selinux --acls --xattrs -cpf - *) | (cd /satellite-etc; tar xvf -) > /satellite-var/.p2 2>&1;  \
                                          (cd /var; tar --selinux --acls --xattrs -cpf - *) | (cd /satellite-var; tar xvf -) > /satellite-var/.p3 2>&1;  \
                                          (cd /opt/puppetlabs; tar --selinux --acls --xattrs -cpf - *) | (cd /satellite-opt-puppetlabs; tar xvf -)  > /satellite-var/.p4 2>&1; \
                                          find /etc > /satellite-var/.p0b 2>&1; \
                                        fi"]
          volumeMounts:
          - name: satellite-etc
            mountPath: /satellite-etc
          - name: satellite-var
            mountPath: /satellite-var
          - name: satellite-opt-puppetlabs
            mountPath: /satellite-opt-puppetlabs
        containers:
        - name: satellite
          image: ${NAME}
          ports:
          - containerPort: 443
            name: satellite
          env:
          - name: APPLICATION_DOMAIN
            value: ${APPLICATION_DOMAIN}
          - name: FOREMAN_ADMIN_PASSWORD
            value: ${FOREMAN_ADMIN_PASSWORD}
          volumeMounts:  # Eventually add puppetlabs as well. Some issues...
          - name: satellite-etc
            mountPath: /etc
          - name: satellite-var
            mountPath: /var
    volumeClaimTemplates:
    - metadata:
        name: satellite-etc
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
    - metadata:
        name: satellite-var
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 100Gi
    - metadata:
        name: satellite-opt-puppetlabs
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
parameters:
- description: The name assigned to all of the frontend objects defined in this template.
  displayName: Name
  name: NAME
  required: true
  value: satellite
- description: The exposed hostname that will route to Satellite, if left blank a value will be defaulted.
  displayName: Application Hostname
  name: APPLICATION_DOMAIN
- description: The URL of the repository with the Satellite Dockerfile
  name: SOURCE_REPOSITORY_URL
  displayName: Git Repository URL
  value: http://github.com/atgreen/tiysoo.git
- description: Red Hat Subscription Manager user name
  name: RHSM_USERNAME
- description: Red Hat Subscription Manager password
  name: RHSM_PASSWORD
- description: Red Hat Subscription Manager subscription pool
  name: RHSM_POOL
- description: Satellite admin password
  name: FOREMAN_ADMIN_PASSWORD
