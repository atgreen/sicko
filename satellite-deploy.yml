---
apiVersion: v1
kind: Service
metadata:
  name: satellite
  labels:
    app: satellite
spec:
  ports:
  - port: 443
    name: satellite
  clusterIP: None
  selector:
    app: satellite
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: satellite
  name: satellite
spec:
  clusterIP: None
  ports:
  - name: satellite
    port: 443
    protocol: TCP
    targetPort: 443
  selector:
    app: satellite
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: satellite
  name: satellite
spec:
  host: satellite-satellite.apps.home.labdroid.net
  port:
    targetPort: satellite
  tls:
    termination: passthrough
  to:
    kind: Service
    name: satellite
    weight: 100
  wildcardPolicy: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: satellite
spec:
  selector:
    matchLabels:
      app: satellite
  serviceName: "satellite"
  replicas: 1
  template:
    metadata:
      labels:
        app: satellite
    spec:
      terminationGracePeriodSeconds: 10
      initContainers:
      - name: init-satellite
        image: docker-registry.default.svc:5000/satellite/satellite:latest
        command: ["/bin/bash", "-c", "if ! test -f /satellite-var/.tiysoo-installed; then
                                        rm -rf /satellite-etc/* /satellite-var/* /satellite-etc/.* /satellite-var/.*; \
                                        find /etc > /satellite-var/.p0 2>&1; \
                                        find /etc/foreman-installer | xargs ls -l >> /satellite-var/.p1   2>&1; \
                                        (cd /etc; tar --selinux --acls --xattrs -cpf - *) | (cd /satellite-etc; tar xvf -) > /satellite-var/.p2 2>&1;  \
                                        (cd /var; tar --selinux --acls --xattrs -cpf - *) | (cd /satellite-var; tar xvf -) > /satellite-var/.p3 2>&1;  \
                                        (cd /opt/puppetlabs; tar --selinux --acls --xattrs -cpf - *) | (cd /satellite-opt-puppetlabs; tar xvf -)  > /satellite-var/.p4 2>&1; \
                                      fi"]
        volumeMounts:
        - name: satellite-etc
          mountPath: /satellite-etc
        - name: satellite-var
          mountPath: /satellite-var
        - name: satellite-opt-puppetlabs
          mountPath: /satellite-opt-puppetlabs
      containers:
      - name: satellite
        image: docker-registry.default.svc:5000/satellite/satellite:latest
        ports:
        - containerPort: 443
          name: satellite
        volumeMounts:  # Eventually add puppetlabs as well. Some issues...
        - name: satellite-etc
          mountPath: /etc
        - name: satellite-var
          mountPath: /var
  volumeClaimTemplates:
  - metadata:
      name: satellite-etc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: satellite-var
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Gi
  - metadata:
      name: satellite-opt-puppetlabs
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
